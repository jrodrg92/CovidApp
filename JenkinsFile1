pipeline {
    agent {
        docker {
            image 'maven:3.8.1-adoptopenjdk-11' 
            args '-v /root/.m2:/root/.m2' 
        }
    }

    stages {
        stage('Build') { 
            steps {
                sh 'mvn -B -DskipTests clean package' 
            }
        }
	    stage("build & SonarQube analysis") {
	          node {
	              withSonarQubeEnv('My SonarQube Server') {
	                 sh 'mvn clean package sonar:sonar'
	              }
	          }
	    }
	    stage("Quality Gate"){
	          timeout(time: 1, unit: 'HOURS') {
	              def qg = waitForQualityGate()
	              if (qg.status != 'OK') {
	                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
	              }
	          }
	    }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}


 stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage("build & SonarQube analysis") {
            agent any
            steps {
              withSonarQubeEnv('sonarscanner') {
                sh 'mvn clean package sonar:sonar'
              }
            }
        }
        stage("Quality Gate") {
	        steps {
	          timeout(time: 1, unit: 'HOURS') {
	            waitForQualityGate abortPipeline: true
	          }
	        }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }